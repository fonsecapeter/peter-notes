peter-notes(1) -- manage your notes from the terminal
=============================================

## SYNOPSIS

`notes` [<FILE-GLOB>] <br>
`notes` `-s`|`--search` <REGEX> <br>
`notes` `-f`|`--find` <FILE-GLOB> <br>
`notes` `-l`|`--list` [<PATH>] <br>

## DESCRIPTION

This document describes the **peter-notes** tool. This simple ruby
gem is an awesome way to manage personal notes from the terminal.

## OPTIONS

These options provide some extra utility beyond simply opening notes
for editing.

  * `-s`, `--search <REGEX>`:
    Search within notes for text matching the specified `REGEX`. If you havent guessed, this is the [grep](http://linuxcommand.org/man_pages/grep1.html) part. Specifically, its running `grep -r YOUR-NOTES-DIR -e REGEX`.

  * `-f`, `--find <FILE-GLOB>`:
    Seach for notes that match the specified file-glob. This ones running [find](http://linuxcommand.org/man_pages/find1.html) -- `find YOUR-NOTES-DIR -name FILE-GLOB`. Its a little more than that though, this will be fuzzy in that you can add some path info to your glob. For example, if you ran `notes --find "projects/*.txt"`, youd get back both `projects/python/jarbs.txt` and `projects/ruby/peter_notes.txt`. So its better than just find. A little.


  * `-l`, `--list [<PATH>]`:
    List all notes or, if a `PATH` is specified, list notes within the specified path. Bet you thought this was running `ls -r`, well its actually running [tree](http://linuxcommand.org/man_pages/tree1.html) because its much cooler -- `tree YOUR-NOTES-DIR/PATH`.


## EXAMPLES

`notes`. Yeah.

But you can do more!

Lets assume you have the following notes:

    /Users/peter/Notes/
    |-- projects
    |   |-- python
    |   |   +-- jarbs.txt
    |   +-- ruby
    |       +-- peter_notes.txt
    +-- other
        +-- motorcycle.txt

Most of the time you just want to open them. To do that, just type `notes`. You can specify your text editor and where your notes are in `~/peter-notes.yaml` (see the preferences section below).

If you want to open a specific note, you can pass in a `file-glob` to specify which notes you want to open. If you think a file glob is what happens when you spill coffee on your computer, just check this out [this](http://tldp.org/LDP/abs/html/globbingref.html) or google it (hint, you use it in bash a lot, like, when you `ls *.rb`).

If you just want to open `other/motorcycle.txt` you can run `notes "other/motorcycle.txt"`. But thats kind of lame, so you could also fo `notes "motorcycle.txt"`, or even `notes "moto*"`. If youre feeling extra crazy, you could even get away with `m*` in this case, basically if you pass a glob in, `peter-notes` will just take the first match in `--find` (see below) and open that.

If you wanted to open all notes under `projects/` you could also use this same idea and run `notes "projects"`.

Thats like what 90% of what youll ever need and no crazy macros or flags to memorize. Not bad right? Well not all flags are bad, in fact, you also get some super-helpful optional ones for the other 10%, just look above at the OPTIONS section.

Oh yeah, make sure your terminal has `grep`, `find`, and `tree`. It should, but depends on how crazy your 'gear' is.

## PREFERENCES

Preferences are saved in '~/.peter-notes.yml'. There are just 2
options that you can set:

    editor:
        The editor of your choice. This value will get passed to bash so
        make sure you use the exact name your terminal will understand.
        Possible Values: ['vim', 'subl', 'atom', 'emacs', 'nano']
                         (more?) I haven't tested others and dont know
                         which work well when opening a directory. For
                         vim I use the NerdTree plugin.
        Default Value: 'vim'

    notes_dir:
        The home of your notes. This is where `peter-notes` will look
        for them.
        Possible Values: any valid + existing dorectory path. I use
                         '~/GoogleDrive/Notes' because I track mine in
                         google drive (OverGrive for linux).
        Default Value: '~/Notes'

That's [yaml](http://www.yaml.org/start.html) so it should look like this:

    editor: vim
    notes_dir: /home/peter/Notes

## AUTHORS

Peter Fonseca <peter.nfonseca@gmail.com>

## SEE ALSO

This tool runs on top of a few very useful bash utilities and relies
on terminal-accessible text-editors. It was also written in a
fantastic language called ruby.

bash(1), grep(1), find(1), tree(1), vim(1), ruby(1)
